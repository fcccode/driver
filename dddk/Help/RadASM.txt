LANGUAGES
---------
Assembly:
- Masm
- GoAsm
- Fasm
- Tasm
- jWasm
- sol_asm
- asemw (8051 assembler)
High level:
- VC6 C/C++
- BCC 5.5 C/C++
- FreePASCAL
- MinGW C/C++
- FreeBASIC

SETUP
-----
RadASM must be configured to reflect your installation of RadASM, assembler / compiler  and help files.

Option / Environment
--------------------
The environment must be set up for each assembler / compiler.
By default the environment is configured to assume (DRIVE: Is C:, D: or any valid drive):
- RadASM (RadASM.ini)
  RadASM is installed in DRIVE:\RadASM
- Masm (Masm.ini)
  Masm is installed to DRIVE:\Masm32 with the binaries in bin folder, include files in include
  folder and libraries in lib folder.
- GoAsm (GoAsm.ini)
  GoAsm is installed to DRIVE:\GoAsm with the binaries in bin folder and include files in headers.
- Fasm (Fasm.ini)
  Fasm is installed to DRIVE:\Fasm with binaries in bin folder and include files in include.
- Tasm (Tasm.ini)
  Tasm is installed to DRIVE:\Tasm with the binaries in bin folder, include files in include
  folder and libraries in lib folder.
  NOTE: You must create TASM.CFG and TLINK32.CFG files in the bin directory to reference the include
  and lib paths.
- jWasm (jWasm.ini)
  jWasm is installed to DRIVE:\jWasm with the binaries in bin folder, include files in include
  folder and libraries in lib folder.
  NOTE: This jWasm configuration uses GoRC, polink and polib.
- VC6 C/C++ (Cpp.ini)
  VC6 is installed to DRIVE:\Program Files\Microsoft Visual Studio\VC98 with binaries in bin folder,
  include files in include folder and libraries in lib folder.
- Borland BCC55 (Bcc.ini)
  BCC55 is installed to DRIVE:\Borland\BCC55 with binaries in bin folder, include files in include
  folder and libraries in lib folder.
  NOTE: You must create bcc32.cfg and ilink32.cfg files in the bin folder to reference the include
  and lib paths.

Acronyms:
$A=Application path.

The default environment has been made relative to the RadASM folder ($A is acronym for application path).
This way you can have everything on a memory stick where the drive letter can change.

Option / Make
-------------
Here you specify make types and assembler / linker / compiler commandline switches and the
resulting output file. There can be max 32 make types. To help protect your computer the
actual exe to run is specified in Assembler.ini, not in the project file.
The menu is specific to each assembler / compiler.

Acronyms:
$A=Application path.
$C=Main code file.
$F=Main file without extention.
$M=Modules (a temporary Mod.txt file is created when linking. This file will contain modules if any).
$O=Resulting output when linking.
$R=Main resource script (.rc file).

Option / Tools Menu
------------------
Here you can add tools that you often use.
The menu is specific to each assembler / compiler.

Acronyms:
$A=Application path.
$=Current open file without extention
$C=Main code file.
$R=Main resource file.
$P=Project file.

Option / Help Menu
------------------
Here you can add help files and links to web sites.
The menu is specific to each assembler / compiler.

Acronyms:
$A=Application path.

Option / F1-Help
----------------
Here you must specify help files for api, rc and assembler / compiler.
The F1-Help is specific to each assembler / compiler.
The Option / Code Editor / Syntax words is used to select wich help file to show.

Acronyms:
$A=Application path.

