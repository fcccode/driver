<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
<OACRDEFECTCOUNT>12</OACRDEFECTCOUNT>
<OACRERRORCOUNT>0</OACRERRORCOUNT>
<DEFECT _seq="1"><SFA><LINE>43</LINE><COLUMN>14</COLUMN><FILENAME>main.c</FILENAME><FILEPATH>c:\timer-io\sys\</FILEPATH></SFA><DEFECTCODE>28107</DEFECTCODE><DESCRIPTION>The Memory 'pOurDevice' must be held when calling 'IoAttachDeviceToDeviceStack'.</DESCRIPTION><FUNCTION>AddDevice</FUNCTION><FUNCLINE>32</FUNCLINE><PATH><SFA><LINE>34</LINE><COLUMN>17</COLUMN><FILENAME>main.c</FILENAME><FILEPATH>c:\timer-io\sys\</FILEPATH></SFA><SFA><LINE>35</LINE><COLUMN>17</COLUMN><FILENAME>main.c</FILENAME><FILEPATH>c:\timer-io\sys\</FILEPATH></SFA><SFA><LINE>36</LINE><COLUMN>17</COLUMN><FILENAME>main.c</FILENAME><FILEPATH>c:\timer-io\sys\</FILEPATH></SFA><SFA><LINE>38</LINE><COLUMN>10</COLUMN><FILENAME>main.c</FILENAME><FILEPATH>c:\timer-io\sys\</FILEPATH></SFA><SFA><LINE>39</LINE><COLUMN>22</COLUMN><FILENAME>main.c</FILENAME><FILEPATH>c:\timer-io\sys\</FILEPATH></SFA><SFA><LINE>40</LINE><COLUMN>16</COLUMN><FILENAME>main.c</FILENAME><FILEPATH>c:\timer-io\sys\</FILEPATH></SFA><SFA><LINE>41</LINE><COLUMN>22</COLUMN><FILENAME>main.c</FILENAME><FILEPATH>c:\timer-io\sys\</FILEPATH></SFA><SFA><LINE>42</LINE><COLUMN>22</COLUMN><FILENAME>main.c</FILENAME><FILEPATH>c:\timer-io\sys\</FILEPATH></SFA><SFA><LINE>43</LINE><COLUMN>14</COLUMN><FILENAME>main.c</FILENAME><FILEPATH>c:\timer-io\sys\</FILEPATH></SFA></PATH></DEFECT>
<DEFECT _seq="2"><SFA><LINE>47</LINE><COLUMN>32</COLUMN><FILENAME>main.c</FILENAME><FILEPATH>c:\timer-io\sys\</FILEPATH></SFA><DEFECTCODE>28155</DEFECTCODE><DESCRIPTION>The function being assigned or passed should be a IO_TIMER_ROUTINE function:  Add the declaration 'IO_TIMER_ROUTINE OnTimer;' before the current first declaration of OnTimer.</DESCRIPTION><FUNCTION>AddDevice</FUNCTION><FUNCLINE>32</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="3"><SFA><LINE>47</LINE><COLUMN>19</COLUMN><FILENAME>main.c</FILENAME><FILEPATH>c:\timer-io\sys\</FILEPATH></SFA><DEFECTCODE>28133</DEFECTCODE><DESCRIPTION>IoInitializeTimer is best called from AddDevice:  IoInitializeTimer can only be called once per device object. Calling it from the AddDevice routine helps assure that it is not unexpectedly called more than once.</DESCRIPTION><FUNCTION>AddDevice</FUNCTION><FUNCLINE>32</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="4"><SFA><LINE>115</LINE><COLUMN>9</COLUMN><FILENAME>main.c</FILENAME><FILEPATH>c:\timer-io\sys\</FILEPATH></SFA><DEFECTCODE>28101</DEFECTCODE><DESCRIPTION>The Drivers module has inferred that the current function is a DRIVER_INITIALIZE function:  This is informational only. No problem has been detected.</DESCRIPTION><FUNCTION>DriverEntry</FUNCTION><FUNCLINE>115</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="5"><SFA><LINE>117</LINE><COLUMN>40</COLUMN><FILENAME>main.c</FILENAME><FILEPATH>c:\timer-io\sys\</FILEPATH></SFA><DEFECTCODE>28169</DEFECTCODE><DESCRIPTION>The dispatch function 'IrpPnp' does not have any __drv_dispatchType annotations:  This can be corrected by adding appropriate __drv_dispatchType annotations to the function. Unnecessary casts can cause this warning.</DESCRIPTION><FUNCTION>DriverEntry</FUNCTION><FUNCLINE>115</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="6"><SFA><LINE>119</LINE><COLUMN>42</COLUMN><FILENAME>main.c</FILENAME><FILEPATH>c:\timer-io\sys\</FILEPATH></SFA><DEFECTCODE>28169</DEFECTCODE><DESCRIPTION>The dispatch function 'IrpFile' does not have any __drv_dispatchType annotations:  This can be corrected by adding appropriate __drv_dispatchType annotations to the function. Unnecessary casts can cause this warning.</DESCRIPTION><FUNCTION>DriverEntry</FUNCTION><FUNCLINE>115</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="7"><SFA><LINE>120</LINE><COLUMN>51</COLUMN><FILENAME>main.c</FILENAME><FILEPATH>c:\timer-io\sys\</FILEPATH></SFA><DEFECTCODE>28169</DEFECTCODE><DESCRIPTION>The dispatch function 'IrpIOCTL' does not have any __drv_dispatchType annotations:  This can be corrected by adding appropriate __drv_dispatchType annotations to the function. Unnecessary casts can cause this warning.</DESCRIPTION><FUNCTION>DriverEntry</FUNCTION><FUNCLINE>115</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="8"><SFA><LINE>117</LINE><COLUMN>40</COLUMN><FILENAME>main.c</FILENAME><FILEPATH>c:\timer-io\sys\</FILEPATH></SFA><DEFECTCODE>28155</DEFECTCODE><DESCRIPTION>The function being assigned or passed should be a DRIVER_DISPATCH function:  Add the declaration 'DRIVER_DISPATCH IrpPnp;' before the current first declaration of IrpPnp.</DESCRIPTION><FUNCTION>DriverEntry</FUNCTION><FUNCLINE>115</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="9"><SFA><LINE>119</LINE><COLUMN>42</COLUMN><FILENAME>main.c</FILENAME><FILEPATH>c:\timer-io\sys\</FILEPATH></SFA><DEFECTCODE>28155</DEFECTCODE><DESCRIPTION>The function being assigned or passed should be a DRIVER_DISPATCH function:  Add the declaration 'DRIVER_DISPATCH IrpFile;' before the current first declaration of IrpFile.</DESCRIPTION><FUNCTION>DriverEntry</FUNCTION><FUNCLINE>115</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="10"><SFA><LINE>120</LINE><COLUMN>51</COLUMN><FILENAME>main.c</FILENAME><FILEPATH>c:\timer-io\sys\</FILEPATH></SFA><DEFECTCODE>28155</DEFECTCODE><DESCRIPTION>The function being assigned or passed should be a DRIVER_DISPATCH function:  Add the declaration 'DRIVER_DISPATCH IrpIOCTL;' before the current first declaration of IrpIOCTL.</DESCRIPTION><FUNCTION>DriverEntry</FUNCTION><FUNCLINE>115</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="11"><SFA><LINE>121</LINE><COLUMN>41</COLUMN><FILENAME>main.c</FILENAME><FILEPATH>c:\timer-io\sys\</FILEPATH></SFA><DEFECTCODE>28155</DEFECTCODE><DESCRIPTION>The function being assigned or passed should be a DRIVER_ADD_DEVICE function:  Add the declaration 'DRIVER_ADD_DEVICE AddDevice;' before the current first declaration of AddDevice.</DESCRIPTION><FUNCTION>DriverEntry</FUNCTION><FUNCLINE>115</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="12"><SFA><LINE>122</LINE><COLUMN>27</COLUMN><FILENAME>main.c</FILENAME><FILEPATH>c:\timer-io\sys\</FILEPATH></SFA><DEFECTCODE>28155</DEFECTCODE><DESCRIPTION>The function being assigned or passed should be a DRIVER_UNLOAD function:  Add the declaration 'DRIVER_UNLOAD Unload;' before the current first declaration of Unload.</DESCRIPTION><FUNCTION>DriverEntry</FUNCTION><FUNCLINE>115</FUNCLINE><PATH/></DEFECT>
</DEFECTS>
